
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  product-service
Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 3
    MemorySize: 128

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment of this stack of resources

Mappings:
  ResourcesName:
    dev:
      tableName: ProductTripDev
      tableNameArn: ProductTripDevArn
      arn: UserPoolArnDev
    staging:
      tableName: ProductTripStaging
      tableNameArn: ProductTripStagingArn
      arn: UserPoolArnStaging
    prod:
      tableName: ProductTripProd
      tableNameArn: ProductTripProdArn
      arn: UserPoolArnProd

Resources:
  Table:
    Type: 'AWS::Serverless::SimpleTable'
    Properties:
      TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      PrimaryKey:
        Name: productCode
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  GetProduct:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handlers/get-product.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: '/product/{productCode}'
            Method: get

  PostProduct:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handlers/save-update-product.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: '/product/{productCode}'
            Method: post

  DeleteProduct:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handlers/delete-product.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: '/product/{productCode}'
            Method: delete
